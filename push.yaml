functions:
- type: subflow
  id: key
  workflow: '/uri-tag-key'
- id: document
  image: localhost:5000/document
  type: knative-workflow
- id: usql
  image: localhost:5000/usql
  type: knative-workflow
states:
- id: a
  type: action 
  log: 'jq(.)'
  action:
    function: key
    input: 'jq(.)'
  transform: 'jq(.args = .return | del(.return))'
  transition: b
- id: b
  type: noop 
  log: 'jq(.)'
  # action:
  #   funcion: document 
  #   input: 'jq(.data)'
  transition: c
- id: c
  type: setter
  log: 'jq(.)'
  variables:
  - scope: namespace
    key: 'jq(("spec_" + .args.key))'
    mimeType: 'application/yaml'
    value: 'jq(.data | @base64d)'
  # - scope: namespace 
  #   key: 'jq(("md_" + .args.key))'
  #   mimeType: 'text/markdown'
  #   value: 'jq(.return)'
  transition: d
- id: d
  type: action 
  log: 'jq(.)'
  action:
    function: usql 
    secrets:
    - dbuser
    - dbpass
    - dbaddr
    input:
      connection: 'jq(("pg://" + (.secrets.dbuser | @uri) + ":" + (.secrets.dbpass | @uri) + "@" + .secrets.dbaddr))'
      queries: 
        - query: "UPDATE apps SET created_at = now() WHERE uri = :'URI' AND tag = :'TAG'"
          args:
          - 'jq("URI=" + .args.uri)'
          - 'jq("TAG=" + .args.tag)'
        - query: "BEGIN IF NOT EXISTS ( SELECT * FROM apps WHERE uri = :'URI' AND tag = :'TAG' ) BEGIN INSERT INTO apps (uri, tag) VALUES (:'URI', :'TAG') END END"
          args:
          - 'jq("URI=" + .args.uri)'
          - 'jq("TAG=" + .args.tag)'
          
