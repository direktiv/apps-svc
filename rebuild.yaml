description: |
  Service to regenerate the API responses.
  This should be called after changing data to apply the changes fully.
functions:
- id: pq
  type: subflow 
  workflow: "/pq"
- id: generate-tags
  type: subflow 
  workflow: "/generate-tags"
- id: load-specs
  type: subflow 
  workflow: "/load-specs"
states:
- id: lookup-apps
  type: action
  action:
    function: pq
    input: 
      queries:
        - "SELECT uri, tag, created_at FROM apps ORDER BY uri DESC, created_at DESC"
        - "SELECT DISTINCT uri FROM apps"
  transform: 'jq({data: .return.return.queries[0].result, uris: [.return.return.queries[1].result[].uri]} | .short = {} | .long = {})'
  transition: loop
- id: loop
  type: switch
  conditions:
  - condition: 'jq(.uris | length > 0)'
    transform: 'jq(.iter = .uris[0] | del(.uris[0]))'
    transition: search-one-app
  defaultTransition: store-lists
- id: search-one-app
  type: noop
  transform: 'jq(.search = [{iter: .iter, x: .data[]} | select(.iter == .x.uri) | .x])'
  transition: generate-tags-response
- id: generate-tags-response
  type: action
  action:
    function: generate-tags
    input:
      uri: 'jq(.iter)'
      data: 'jq(.search)'
  transform: 'jq(del(.return))'
  transition: load-app-specs
- id: load-app-specs
  type: action
  action:
    function: load-specs
    input:
      uri: 'jq(.iter)'
      data: 'jq(.search)'
  transform: 'jq(.short[.iter] = .return.short | .long[.iter] = .return.long | del(.return))'
  transition: loop
- id: store-lists
  type: setter
  variables:
  - scope: namespace
    key: "list"
    value: 'jq(.short)'
  - scope: namespace
    key: "list_expanded"
    value: 'jq(.long)'
  
        
  
